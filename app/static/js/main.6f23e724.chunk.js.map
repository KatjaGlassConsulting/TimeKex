{"version":3,"sources":["components/StatusButton.js","features/excelImport/ExcelStatusDisplay.js","api/kimaiClient.js","features/kimaiDB/kimaiSlice.js","features/kimaiDB/KimaiStatusDisplay.js","features/kimaiTimesheets/kimaiTimesheetsSlice.js","features/kimaiTimesheets/KimaiStatusTimesheetsDisplay.js","api/readFile.js","features/excelImport/ExcelSchema.js","functions/general.js","features/excelImport/excelSlice.js","features/excelImport/ExcelFileReadIn.js","api/kimaiClientPostTimesheet.js","api/kimaiClientPostGeneric.js","features/updateTimesheets/updateTimesheetsSlice.js","components/WeekBox.js","components/ConfirmDeleteInKimai.js","components/WeekDataDisplay.js","components/HeaderTop.js","features/views/Main.js","functions/createData.js","features/messages/messagesSlice.js","components/CreateDBDataExcel.js","features/views/Admin.js","features/views/Info.js","components/ModalIssueNotify.js","features/globalConfig/globalConfigSlice.js","features/views/Login.js","App.js","app/store.js","index.js"],"names":["StatusButton","text","status","icon","errorText","Button","content","labelPosition","disabled","color","loading","onClick","alert","ExcelStatusDisplay","excelDataStatus","useSelector","state","excelData","error","kimaiClient","method","config","a","req","XMLHttpRequest","Promise","resolve","reject","open","kimaiAPI","responseType","setRequestHeader","username","password","onload","response","onerror","statusText","send","initialState","createEntityAdapter","getInitialState","userId","customers","projects","activities","uploadStatus","fetchAllData","createAsyncThunk","result","responseUserID","id","message","name","responseCustomers","forEach","item","responseProjects","customer","responseActivities","project","getIdFromKimaiData","metadata","activity","returnId","Object","keys","key","kimaiSlice","createSlice","reducers","reset","action","extraReducers","pending","fulfilled","payload","rejected","console","log","KimaiStatusDisplay","dispatch","useDispatch","kimaiDataStatus","kimaiData","useEffect","data","fetchAllTimesheets","code","kimaiTimesheetsSlice","KimaiStatusTimesheetsDisplay","KimaiTimesheetsDisplay","kimaiTimesheets","readFile","file","reader","FileReader","readAsArrayBuffer","excelTimeToString","time","basenumber","hour","Math","floor","toString","length","minute","round","schema","prop","type","Number","value","Date","toISOString","split","replaceAll","undefined","getWeekObject","dateString","aDate","valueOf","week","tdt","dayn","getDay","setDate","getDate","firstThursday","setMonth","ceil","ISO8601_week_no","weekStartDay","weekEndDay","aDay","includeMessage","includes","push","checkExcelTimeOverlays","checkArray","filter","stringArray","seen","hasOwnProperty","uniq","map","date","checkDay","oneDayItems","sorted","sort","b","start","localeCompare","maxPrevEndValue","end","i","overlayIssue","checkExcelTimeOverlayPerDay","getTimeFromMsec","timeInMsec","msec","hh","hours","mins","validationError","selectedWeek","fetchExcelData","contentBuffer","readXlsxFile","dateFormat","rows","excelDataSlice","errors","actions","connect","fileInputRef","React","createRef","onImportExcel","files","target","current","click","ref","hidden","onChange","kimaiClientPostTimesheet","timesheet","myData","begin","projectId","activityId","description","billable","JSON","stringify","kimaiClientPostGeneric","deleteStatus","deleteError","deletedData","deleteTimesheets","collection","timesheets","index","timesheetId","hasIssue","errorMessage","pushAllTimesheets","lineNumber","responseId","children","join","responseCode","updateTimesheetsSlice","excelSelectedWeek","isNewWeekBoolArray","v","indexOf","weeks","displayWeek","findIndex","displayWeekString","Group","currentPos","prev","Icon","next","ConfirmDeleteInKimai","props","callbackYes","callbackNo","Modal","size","Header","Content","Actions","excelValidationError","kimaiTimesheetsStatus","kimaiSubmittedTimesheets","updateTimesheets","deletedTimesheets","deleteIssues","kimaiSubmittedStatus","onSendDisabled","useState","displayConfirmDeleteInKimai","setDisplayConfirmDeleteInKimai","row","column","excelDisplayData","startDay","tasks","details","Boolean","chargeableCorrected","chargeable","endDay","entry","substring","customerId","found","excelItem","deletedIDs","concat","includeError","ignoreActivities","sumMsec","sumMsecBillable","date1","sumTimes","sumTimesBillable","investigateHours","displayAction","submittedTimesheet","Table","Cell","positive","negative","className","messages","performSendToKimaiClick","submitExcelData","removeAccordingExcelData","setTimeout","niceTimeDisplay","times","celled","Row","HeaderCell","Body","rowColorCode","overlayColorCode","negativeProject","negativeActivity","negativeStart","negativeEnd","HeaderTop","smallMenuEnlarge","width","height","handleItemClick","e","preventDefault","setState","goToLink","handleSmallMenuEnlargeToggle","menu","Menu","position","Item","adminUser","bind","updateWindowDimensions","this","window","addEventListener","removeEventListener","innerWidth","innerHeight","link","kimaiAPIURL","location","pathname","history","head","align","valign","href","rel","src","alt","style","inverted","secondary","fluid","vertical","renderLargeMenu","renderSmallMenu","Component","withRouter","Main","kimaiGeneralStatusError","to","contentData","callback","updatedKimaiData","messagesResponse","addKimaiData","toAdd","addIfNotInArray","fullArray","itemObject","newReturn","country","customer_country","currency","customer_currency","timezone","customer_timezone","comment","customer_comment","thisCustomer","allErrors","thisProject","thisActivity","excelSchema","finishedFunction","returnMessages","createDBData","createData","Admin","from","displayMessages","Info","Segment","Grid","container","stackable","verticalAlign","centered","ModalIssueNotify","globalConfigSet","Login","user","isLoading","handleUserChange","handlePWChange","handleLoginSubmit","resetKimaiDataRead","keyPress","event","trim","keyCode","invalidCredentialIssues","Input","placeholder","onKeyDown","App","_config","exact","path","component","configureStore","reducer","excelDataReducer","kimaiDataReducer","updateTimesheetsReducer","kimaiTimesheetsReducer","RenderApp","ReactDOM","render","store","document","getElementById"],"mappings":"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","file":"static/js/main.6f23e724.chunk.js","sourcesContent":["import { Button } from \"semantic-ui-react\";\r\n\r\nexport const StatusButton = (text, status, icon, errorText) => {\r\n\r\n    if (status === 'succeeded') {\r\n        return (\r\n            <Button\r\n                content={text}\r\n                labelPosition=\"left\"\r\n                icon={icon}\r\n                disabled\r\n                color=\"green\"\r\n            />\r\n        );\r\n    }\r\n    else if (status === 'idle') {\r\n        return (\r\n            <Button\r\n                content={text}\r\n                labelPosition=\"left\"\r\n                icon={icon}\r\n                disabled\r\n            />\r\n        );\r\n    }\r\n    else if (status === 'loading') {\r\n        return (\r\n            <Button\r\n                content={text}\r\n                labelPosition=\"left\"\r\n                icon={icon}\r\n                disabled\r\n                loading\r\n            />\r\n        );\r\n    }\r\n    else if (status === 'failed') {\r\n        return (\r\n            <Button\r\n                content={text}\r\n                labelPosition=\"left\"\r\n                icon={icon}\r\n                color=\"red\"\r\n                onClick={() => alert(errorText)}\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nexport default StatusButton;","import { useSelector } from 'react-redux'\r\nimport StatusButton from '../../components/StatusButton'\r\n\r\nexport const ExcelStatusDisplay = () => {\r\n    const excelDataStatus = useSelector((state) => state.excelData.status)\r\n    const error = useSelector((state) => state.excelData.error)\r\n\r\n    return StatusButton(\"Excel File Status\", excelDataStatus, \"file excel\", error );\r\n}\r\n","export async function kimaiClient(method, config ) {\r\n    var req = new XMLHttpRequest();\r\n\r\n    return new Promise((resolve, reject) => {        \r\n        req.open(\"GET\", config.kimaiAPI + method, true);\r\n        req.responseType = \"json\";\r\n        \r\n        req.setRequestHeader('X-AUTH-USER', config.username);\r\n        req.setRequestHeader('X-AUTH-TOKEN', config.password);\r\n\r\n        req.onload = () => resolve(req.response);\r\n        req.onerror = () => reject(req.statusText);\r\n\r\n        req.send();\r\n    });\r\n};","import {\r\n    createSlice,\r\n    createAsyncThunk,\r\n    createEntityAdapter,\r\n} from '@reduxjs/toolkit'\r\nimport { kimaiClient } from '../../api/kimaiClient'\r\n\r\nconst kimaiDBAdapter = createEntityAdapter({})\r\n\r\nconst initialState = kimaiDBAdapter.getInitialState({\r\n    status: 'idle',\r\n    error: null,\r\n    userId: null,\r\n    customers: [],\r\n    projects: [],\r\n    activities: [],\r\n    uploadStatus: {}\r\n})\r\n\r\nexport const fetchAllData = createAsyncThunk('kimaiData/fetchAllData', async (config) => {\r\n    \r\n    var result = {};\r\n    const responseUserID = await kimaiClient('users/me', config);\r\n    result.userId = responseUserID.id;\r\n\r\n    if (responseUserID.message) {\r\n        const customError = {\r\n            name: \"fetchAllData Error\",\r\n            message: responseUserID.message\r\n        };\r\n        throw customError;\r\n    }\r\n\r\n    const responseCustomers = await kimaiClient('customers', config);\r\n    result.customers = {};\r\n    responseCustomers.forEach(item => {\r\n        result.customers[item.id] = { id: item.id, name: item.name };\r\n    });\r\n\r\n    const responseProjects = await kimaiClient('projects', config);\r\n    result.projects = {};\r\n    responseProjects.forEach(item => {\r\n        result.projects[item.id] = { id: item.id, name: item.name, customer: result.customers[item.customer] ? result.customers[item.customer] : null };\r\n    });\r\n\r\n    const responseActivities = await kimaiClient('activities', config);\r\n    result.activities = {};\r\n    responseActivities.forEach(item => {\r\n        result.activities[item.id] = { id: item.id, name: item.name, project: result.projects[item.project] ? result.projects[item.project] : null };\r\n    });\r\n\r\n    return result;\r\n\r\n})\r\n\r\nexport function getIdFromKimaiData(metadata, customer, project, activity) {\r\n    if (!metadata){\r\n        return null;\r\n    }\r\n    \r\n    var returnId = null;\r\n    if (!project && !activity) {\r\n        Object.keys(metadata.customers).forEach(key => {\r\n            if (metadata.customers[key].name === customer) {\r\n                returnId = key;\r\n                return;\r\n            }\r\n        })\r\n    }\r\n    else if (!activity) {\r\n        Object.keys(metadata.projects).forEach(key => {\r\n            if (metadata.projects[key].name === project &&\r\n                metadata.projects[key].customer.name === customer) {\r\n                returnId = key;\r\n                return;\r\n            }\r\n        })\r\n    }\r\n    else {\r\n        Object.keys(metadata.activities).forEach(key => {\r\n            if (metadata.activities[key].name === activity) {\r\n                if (!project && !metadata.activities[key].project) {\r\n                    returnId = key;\r\n                    return;\r\n                }\r\n                else if (project &&\r\n                    metadata.activities[key].project?.name === project &&\r\n                    metadata.activities[key].project?.customer.name === customer) {\r\n                    returnId = key;\r\n                    return;\r\n                }\r\n            }\r\n        })\r\n    }\r\n    return returnId;\r\n}\r\n\r\nexport function reset() {\r\n    return { type: \"kimaiData/reset\", payload: {} };\r\n};\r\n\r\n\r\nconst kimaiSlice = createSlice({\r\n    name: 'kimaiData',\r\n    initialState,\r\n    reducers: {\r\n        reset: (state, action) => {\r\n            state.status = 'idle';\r\n            state.error = null;\r\n        }\r\n    },\r\n    extraReducers: {\r\n        [fetchAllData.pending]: (state, action) => {\r\n            state.status = 'loading'\r\n        },\r\n        [fetchAllData.fulfilled]: (state, action) => {\r\n            state.status = 'succeeded';\r\n            state.userId = action.payload.userId;\r\n            state.customers = action.payload.customers;\r\n            state.projects = action.payload.projects;\r\n            state.activities = action.payload.activities;\r\n        },\r\n        [fetchAllData.rejected]: (state, action) => {\r\n            console.log(action);\r\n            state.status = 'failed'\r\n            state.error = action.error.message\r\n        }\r\n    },\r\n})\r\n\r\n// export const { } = kimaiSlice.actions // when actions are available, e.g. \"addkimaiData\" then use this\r\n\r\nexport default kimaiSlice.reducer\r\n","import { useEffect } from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport StatusButton from '../../components/StatusButton';\r\n\r\nimport { fetchAllData } from './kimaiSlice';\r\n\r\nexport const KimaiStatusDisplay = () => {\r\n\r\n    const dispatch = useDispatch()\r\n    //const kimaiData = useSelector((state) => state.kimaiData);\r\n\r\n    const kimaiDataStatus = useSelector((state) => state.kimaiData.status)\r\n    const config = useSelector((state) => state.config)\r\n    const error = useSelector((state) => state.kimaiData.error)\r\n\r\n    useEffect(() => {\r\n        if (kimaiDataStatus === 'idle') {\r\n            dispatch(fetchAllData(config))\r\n        }\r\n    }, [kimaiDataStatus, dispatch, config])\r\n\r\n    return StatusButton(\"Kimai General Data Status\", kimaiDataStatus, \"database\", error );\r\n}\r\n","import {\r\n    createSlice,\r\n    createAsyncThunk,\r\n    createEntityAdapter,\r\n} from '@reduxjs/toolkit'\r\nimport { kimaiClient } from '../../api/kimaiClient'\r\n\r\nconst kimaiDBAdapter = createEntityAdapter({})\r\n\r\nconst initialState = kimaiDBAdapter.getInitialState({\r\n    status: 'idle',\r\n    error: null,\r\n    userId: null,\r\n    data: []\r\n})\r\n\r\nexport const fetchAllTimesheets = createAsyncThunk('kimaiTimesheets/fetchAllTimesheets', async (config) => {\r\n    const response = await kimaiClient('timesheets?user=' + config.userId + '&orderBy=begin&order=DESC&size=1000', config);    \r\n    if (response.code && response.code !== 200) {\r\n        const customError = {\r\n            ...response,\r\n            name: \"fetchAllTimesheets Error\",\r\n        };\r\n        throw customError;\r\n    }\r\n    return response;\r\n})\r\n\r\nconst kimaiTimesheetsSlice = createSlice({\r\n    name: 'kimaiTimesheets',\r\n    initialState,\r\n    reducers: {\r\n    },\r\n    extraReducers: {\r\n        [fetchAllTimesheets.pending]: (state, action) => {\r\n            state.status = 'loading'\r\n        },\r\n        [fetchAllTimesheets.fulfilled]: (state, action) => {\r\n            state.status = 'succeeded';\r\n            state.data = action.payload;\r\n        },\r\n        [fetchAllTimesheets.rejected]: (state, action) => {\r\n            state.status = 'failed'\r\n            state.error = action.error.message\r\n        }\r\n    },\r\n})\r\n\r\nexport default kimaiTimesheetsSlice.reducer","import { useEffect } from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport StatusButton from '../../components/StatusButton';\r\n\r\nimport { fetchAllTimesheets } from './kimaiTimesheetsSlice';\r\n\r\nexport const KimaiStatusTimesheetsDisplay = () => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const KimaiTimesheetsDisplay = useSelector((state) => state.kimaiTimesheets.status)\r\n    const userId = useSelector((state) => state.kimaiData.userId)\r\n    const config = useSelector((state) => state.config)\r\n    const error = useSelector((state) => state.kimaiTimesheets.error)\r\n\r\n    useEffect(() => {\r\n        if (KimaiTimesheetsDisplay === 'idle' && userId) {\r\n            dispatch(fetchAllTimesheets({ ...config, userId: userId }))\r\n        }\r\n    }, [KimaiTimesheetsDisplay, dispatch, config, userId])\r\n    \r\n    return StatusButton(\"Kimai Timesheets Status\", KimaiTimesheetsDisplay, \"database\", error );\r\n}\r\n","const readFile = file => {\r\n    return new Promise((resolve, reject) => {\r\n        let reader = new FileReader();\r\n        reader.onload = () => {resolve(reader.result)};\r\n        reader.onerror = reject;\r\n        reader.readAsArrayBuffer(file);\r\n    })\r\n}\r\n\r\nexport default readFile;","const excelTimeToString = (time) => {\r\n    const basenumber = (time * 24)\r\n    var hour = Math.floor(basenumber).toString();\r\n    if (hour.length < 2) {\r\n        hour = '0' + hour;\r\n    }\r\n\r\n    var minute = Math.round((basenumber % 1) * 60).toString();\r\n    if (minute.length < 2) {\r\n        minute = '0' + minute;\r\n    }\r\n    return (hour + ':' + minute);\r\n};\r\n\r\nexport const schema = {\r\n    'Line number': {\r\n        prop: 'lineNumber',\r\n        type: Number\r\n    },\r\n    'Date': {\r\n        prop: 'date',\r\n        type: (value) => {\r\n            const jsDateFromExcel = new Date(Math.round((value - 25569) * 86400 * 1000))\r\n            return jsDateFromExcel.toISOString().split('T')[0]\r\n        }\r\n    },\r\n    'Client': {\r\n        prop: 'customer',\r\n        type: (value) => {return value.replaceAll(\"\\u00A0\", \" \")}\r\n    },\r\n    'Project': {\r\n        prop: 'project',\r\n        type: (value) => {return value.replaceAll(\"\\u00A0\", \" \")}\r\n    },\r\n    'Activity': {\r\n        prop: 'activity',\r\n        type: (value) => {return value.replaceAll(\"\\u00A0\", \" \")}\r\n    },\r\n    'chargeable': {\r\n        prop: 'chargeable',\r\n        type: (value) => {\r\n            if (value === \"ja\" || value === \"yes\") {\r\n                return true;\r\n            }\r\n            else if (value === \"nein\" || value === \"no\") {\r\n                return false;\r\n            }\r\n            else if (value === undefined || value === \"\" || value === null) {\r\n                return null;\r\n            }\r\n            else {\r\n                return undefined;\r\n            }\r\n        }\r\n    },\r\n    'chargeable (correction)': {\r\n        prop: 'chargeableCorrected',\r\n        type: (value) => {\r\n            if (value === \"ja\") {\r\n                return true;\r\n            }\r\n            else if (value === \"nein\") {\r\n                return false;\r\n            }\r\n            else if (value === undefined || value === \"\" || value === null) {\r\n                return null;\r\n            }\r\n            else {\r\n                return undefined;\r\n            }\r\n        }\r\n    },\r\n    'Tasks': {\r\n        prop: 'tasks',\r\n        type: (value) => {return value.replaceAll(\"\\u00A0\", \" \")}\r\n    },\r\n    'Details': {\r\n        prop: 'details',\r\n        type: (value) => {return value.replaceAll(\"\\u00A0\", \" \")}\r\n    },\r\n    'Start': {\r\n        prop: 'start',\r\n        type: (value) => {\r\n            return excelTimeToString(value);\r\n        }\r\n    },\r\n    'End': {\r\n        prop: 'end',\r\n        type: (value) => {\r\n            return excelTimeToString(value);\r\n        }\r\n    }\r\n}","function ISO8601_week_no(aDate) {\r\n    var tdt = new Date(aDate.valueOf(aDate));\r\n    var dayn = (tdt.getDay() + 6) % 7;\r\n    tdt.setDate(tdt.getDate() - dayn + 3);\r\n    var firstThursday = tdt.valueOf();\r\n    tdt.setMonth(0, 1);\r\n    if (tdt.getDay() !== 4) {\r\n        tdt.setMonth(0, 1 + ((4 - tdt.getDay()) + 7) % 7);\r\n    }\r\n    return 1 + Math.ceil((firstThursday - tdt) / 604800000);\r\n}\r\n\r\nexport function uniq(stringArray) {\r\n    var seen = {};\r\n    return stringArray.filter(function (item) {\r\n        return seen.hasOwnProperty(item) ? false : (seen[item] = true);\r\n    });\r\n}\r\n\r\nexport function getWeekObject(dateString) {\r\n    const aDate = new Date(dateString.valueOf());\r\n    const week = ISO8601_week_no(aDate);\r\n    var weekStartDay = new Date(aDate.valueOf());\r\n    var weekEndDay = new Date(aDate.valueOf());\r\n    const aDay = aDate.getDay() === 0 ? 7 : aDate.getDay();\r\n    weekStartDay.setDate(weekStartDay.getDate() - aDay + 1);\r\n    weekEndDay.setDate(weekEndDay.getDate() - aDay + 7);\r\n\r\n    return {\r\n        week: week,\r\n        weekStartDay: weekStartDay.toISOString().split('T')[0],\r\n        weekEndDay: weekEndDay.toISOString().split('T')[0]\r\n    }\r\n}\r\n\r\nfunction includeMessage(item, message) {\r\n    if (!item.message) {\r\n        item.message = []\r\n        item.message.push(message);\r\n    }\r\n    else if (!item.message.includes(message)) {\r\n        item.message.push(message);\r\n    }\r\n}\r\n\r\nfunction checkExcelTimeOverlayPerDay(oneDayItems) {\r\n    // sort by start date\r\n    const sorted = oneDayItems.sort((a, b) => a.start?.localeCompare(b.start))\r\n\r\n    // compare with previous, start at second element\r\n    var maxPrevEndValue = sorted[0].end;\r\n    for (var i = 1; i < sorted.length; i++) {\r\n        if (sorted[i].start?.localeCompare(maxPrevEndValue) < 0) {\r\n            sorted[i].overlayIssue = true;\r\n            sorted[i - 1].overlayIssue = true;\r\n            includeMessage(sorted[i], \"Time overlap available!\");\r\n            includeMessage(sorted[i - 1], \"Time overlap available!\");\r\n        }\r\n        if (maxPrevEndValue.localeCompare(sorted[i].end) < 0) {\r\n            maxPrevEndValue = sorted[i].end\r\n        }\r\n    }\r\n}\r\n\r\nexport function checkExcelTimeOverlays(content) {\r\n    const checkArray = content.filter(item => item.action === \"none\" || item.action === \"add\" || item.action === \"added\");\r\n    const checkDays = uniq(checkArray).map(item => item.date);\r\n    checkDays.forEach(checkDay => {\r\n        checkExcelTimeOverlayPerDay(checkArray.filter(item => item.date === checkDay));\r\n    })\r\n}\r\n\r\nfunction getTimeFromMsec(timeInMsec) {\r\n    var msec = timeInMsec;\r\n    var hh = Math.floor(msec / 1000 / 60 / 60);\r\n    msec -= hh * 1000 * 60 * 60;\r\n    var mm = Math.floor(msec / 1000 / 60);\r\n    return { hours: hh, mins: mm }\r\n}\r\n\r\nexport function investigateHours(content) {\r\n    const checkArray = content.filter(item => item.action === \"none\" || item.action === \"add\" || item.action === \"added\");\r\n    var sumMsec = 0;\r\n    var sumMsecBillable = 0;\r\n    checkArray.forEach(item => {\r\n        const date1 = new Date(item.date + \"T\" + item.start);\r\n        const date2 = new Date(item.date + \"T\" + item.end);\r\n        const msec = date2 - date1;\r\n        sumMsec += msec;\r\n        if (item.billable) {\r\n            sumMsecBillable += msec;\r\n        }\r\n    })\r\n    return { sumTimes: getTimeFromMsec(sumMsec), sumTimesBillable: getTimeFromMsec(sumMsecBillable) };\r\n}\r\n","import {\r\n    createSlice,\r\n    createAsyncThunk,\r\n    createEntityAdapter,\r\n} from '@reduxjs/toolkit'\r\n\r\nimport readFile from '../../api/readFile'\r\nimport readXlsxFile from 'read-excel-file'\r\nimport { schema } from './ExcelSchema'\r\nimport { getWeekObject } from '../../functions/general';\r\n\r\n\r\nconst excelDataAdapter = createEntityAdapter({})\r\n\r\nconst initialState = excelDataAdapter.getInitialState({\r\n    status: 'idle',\r\n    error: null,\r\n    data: [],\r\n    validationError: [],\r\n    selectedWeek: null\r\n})\r\n\r\nexport const fetchExcelData = createAsyncThunk('excelData/fetchExcelData', async (file) => {\r\n    let contentBuffer = await readFile(file);\r\n    const result = await readXlsxFile(contentBuffer, { schema, dateFormat: 'yyyy-MM-dd' });    \r\n    if (result.rows){\r\n        result.rows.forEach(item => {\r\n            if (item.date){\r\n                item.week = getWeekObject(item.date);\r\n            }\r\n        })\r\n    }    \r\n    return result;\r\n})\r\n\r\nconst excelDataSlice = createSlice({\r\n    name: 'excelData',\r\n    initialState,\r\n    reducers: {\r\n        selectedWeek(state, action) {\r\n            state.selectedWeek = action.payload\r\n        },\r\n    },\r\n    extraReducers: {\r\n        [fetchExcelData.pending]: (state, action) => {\r\n            state.status = 'loading'\r\n        },\r\n        [fetchExcelData.fulfilled]: (state, action) => {\r\n            state.status = 'succeeded';\r\n            state.validationError = action.payload.errors;\r\n            state.data = action.payload.rows;\r\n        },\r\n        [fetchExcelData.rejected]: (state, action) => {\r\n            state.status = 'failed'\r\n            state.error = action.error.message\r\n        }\r\n    },\r\n})\r\n\r\nexport const { selectedWeek } = excelDataSlice.actions \r\n\r\nexport default excelDataSlice.reducer\r\n","import { Button } from \"semantic-ui-react\";\r\n//import readXlsxFile from 'read-excel-file'\r\n//import { schema } from './ExcelSchema'\r\nimport React from 'react';\r\nimport { connect, useDispatch, useSelector } from \"react-redux\";\r\nimport { fetchExcelData } from \"./excelSlice\";\r\n\r\nexport const ExcelFileReadIn = () => {\r\n    const fileInputRef = React.createRef();\r\n    const dispatch = useDispatch();\r\n\r\n    const onImportExcel = async (file) => {\r\n        const { files } = file.target;\r\n        dispatch(fetchExcelData(files[0]));\r\n    }\r\n\r\n    const excelDataStatus = useSelector((state) => state.excelData.status)\r\n\r\n    return (\r\n        <div>\r\n            {excelDataStatus === \"loading\" &&\r\n                <Button\r\n                    loading\r\n                    content=\"Choose File\"\r\n                    labelPosition=\"left\"\r\n                    icon=\"file\"\r\n                    onClick={() => fileInputRef.current.click()}\r\n                />\r\n            }\r\n            {excelDataStatus === \"succeeded\" &&\r\n                <Button\r\n                    disabled\r\n                    content=\"Choose File\"\r\n                    labelPosition=\"left\"\r\n                    icon=\"file\"\r\n                    onClick={() => fileInputRef.current.click()}\r\n                />\r\n            }\r\n            {excelDataStatus !== \"succeeded\" &&\r\n                excelDataStatus !== \"loading\" &&\r\n                <Button\r\n                    content=\"Choose File\"\r\n                    labelPosition=\"left\"\r\n                    icon=\"file\"\r\n                    onClick={() => fileInputRef.current.click()}\r\n                />\r\n            }\r\n            <input\r\n                ref={fileInputRef}\r\n                type=\"file\"\r\n                hidden\r\n                onChange={onImportExcel}\r\n            />\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default connect()(ExcelFileReadIn);","export async function kimaiClientPostTimesheet(timesheet, config) {\r\n    var req = new XMLHttpRequest();\r\n\r\n    return new Promise((resolve, reject) => {\r\n        req.open(\"POST\", config.kimaiAPI + 'timesheets', true);\r\n        req.responseType = \"json\";\r\n        req.setRequestHeader('Content-Type', 'application/json');\r\n        req.setRequestHeader('X-AUTH-USER', config.username);\r\n        req.setRequestHeader('X-AUTH-TOKEN', config.password);\r\n        \r\n        req.onload = () => resolve(req.response);\r\n        req.onerror = () => reject(req);\r\n\r\n        var myData = {};\r\n        myData.begin = timesheet.date + \" \" + timesheet.start;\r\n        myData.end = timesheet.date + \" \" + timesheet.end;\r\n        myData.project = timesheet.projectId;\r\n        myData.activity = timesheet.activityId;\r\n        myData.description = timesheet.description;\r\n        myData.billable = timesheet.billable;\r\n\r\n        req.send(JSON.stringify(myData));\r\n    });\r\n};\r\n","export async function kimaiClientPostGeneric(method, config, data, type = \"POST\") {\r\n    var req = new XMLHttpRequest();\r\n\r\n    return new Promise((resolve, reject) => {\r\n        req.open(type, config.kimaiAPI + method, true);\r\n        req.responseType = \"json\";\r\n        req.setRequestHeader('Content-Type', 'application/json');\r\n        req.setRequestHeader('X-AUTH-USER', config.username);\r\n        req.setRequestHeader('X-AUTH-TOKEN', config.password);\r\n\r\n        req.onload = () => resolve(req.response);\r\n        req.onerror = () => reject(req);\r\n\r\n        req.send(JSON.stringify(data));\r\n    });\r\n};\r\n\r\nexport default kimaiClientPostGeneric;","import {\r\n    createSlice,\r\n    createAsyncThunk,\r\n    createEntityAdapter,\r\n} from '@reduxjs/toolkit'\r\nimport { kimaiClientPostTimesheet } from '../../api/kimaiClientPostTimesheet';\r\nimport { kimaiClientPostGeneric } from '../../api/kimaiClientPostGeneric';\r\n\r\nconst updateTimesheetsAdapter = createEntityAdapter({})\r\n\r\nconst initialState = updateTimesheetsAdapter.getInitialState({\r\n    status: 'idle',\r\n    error: null,\r\n    data: {},\r\n    deleteStatus: 'idle',\r\n    deleteError: {},\r\n    deletedData: {}\r\n})\r\n\r\nexport const deleteTimesheets = createAsyncThunk('updateTimesheets/deleteTimesheets', async (collection) => {\r\n    const timesheets = collection.data;\r\n    const config = collection.config;\r\n    var result = [];\r\n    var deleteError = {};\r\n\r\n    for (let index = 0; index < timesheets.length; index++) {\r\n        var timesheetId = timesheets[index].timesheetId;\r\n        const response = await kimaiClientPostGeneric(\"timesheets/\" + timesheetId, config, {}, \"DELETE\");\r\n        if (response === null) {\r\n            result.push({ ...timesheets[index], action: \"deleted\", hasIssue: false });\r\n        }\r\n        else {\r\n            deleteError[timesheetId] = { errorMessage: response.message }\r\n        }\r\n    }\r\n    return { data: result, deleteError: deleteError };\r\n});\r\n\r\nexport const pushAllTimesheets = createAsyncThunk('updateTimesheets/pushAllTimesheets', async (collection) => {\r\n    const timesheets = collection.data;\r\n    const config = collection.config;\r\n    var result = {};\r\n\r\n    for (let index = 0; index < timesheets.length; index++) {\r\n        const response = await kimaiClientPostTimesheet(timesheets[index], config);\r\n        result[timesheets[index].lineNumber] = {};\r\n        result[timesheets[index].lineNumber].responseId = response.id;\r\n        if (response.code && response.code !== 200) {\r\n            var errorText = response.message;\r\n            if (response.errors?.children) {\r\n                for (var key in response.errors.children) {\r\n                    if (response.errors.children[key].errors) {\r\n                        errorText = errorText + \" - \" + key + \" : \" + response.errors.children[key].errors.join(\", \");\r\n                    }\r\n                }\r\n            }\r\n            result[timesheets[index].lineNumber].hasIssue = true;\r\n            result[timesheets[index].lineNumber].responseCode = response.code;\r\n            result[timesheets[index].lineNumber].error = true;\r\n            result[timesheets[index].lineNumber].errorMessage = errorText;\r\n        }\r\n        else {\r\n            result[timesheets[index].lineNumber].hasIssue = false;\r\n        }\r\n    }\r\n    return result;\r\n});\r\n\r\n\r\nexport function reset() {\r\n    return { type: \"updateTimesheets/reset\", payload: {} };\r\n};\r\n\r\nconst updateTimesheetsSlice = createSlice({\r\n    name: 'updateTimesheets',\r\n    initialState,\r\n    reducers: {\r\n        reset: (state, action) => {\r\n            state.status = 'idle'\r\n            state.error = null\r\n            state.data = {}\r\n            state.deleteStatus = 'idle'\r\n            state.deleteError = {}\r\n            state.deletedData = {}\r\n        }\r\n    },\r\n    extraReducers: {\r\n        [pushAllTimesheets.pending]: (state, action) => {\r\n            state.status = 'loading'\r\n        },\r\n        [pushAllTimesheets.fulfilled]: (state, action) => {\r\n            state.status = 'succeeded'\r\n            state.data = action.payload;\r\n        },\r\n        [pushAllTimesheets.rejected]: (state, action) => {\r\n            state.status = 'failed'\r\n            state.error = action.error.message\r\n        },\r\n        [deleteTimesheets.pending]: (state, action) => {\r\n            state.deleteStatus = 'loading'\r\n        },\r\n        [deleteTimesheets.fulfilled]: (state, action) => {\r\n            state.deleteStatus = 'succeeded'\r\n            state.deletedData = action.payload.data;\r\n            state.deleteError = action.payload.deleteError;\r\n        },\r\n        [deleteTimesheets.rejected]: (state, action) => {\r\n            state.deleteStatus = 'failed'\r\n            state.deleteError = action.error.message\r\n        }\r\n    },\r\n})\r\n\r\nexport default updateTimesheetsSlice.reducer\r\n","import { useSelector, useDispatch } from 'react-redux'\r\nimport { Button, Icon } from \"semantic-ui-react\";\r\nimport { connect } from \"react-redux\";\r\nimport { selectedWeek } from \"../features/excelImport/excelSlice\";\r\nimport { reset } from '../features/updateTimesheets/updateTimesheetsSlice';\r\nimport { useEffect } from 'react';\r\n\r\n\r\nexport const WeekBox = () => {\r\n    const dispatch = useDispatch();\r\n    const excelData = useSelector((state) => state.excelData.data);\r\n    const excelDataStatus = useSelector((state) => state.excelData.status);\r\n    const excelSelectedWeek = useSelector((state) => state.excelData.selectedWeek);\r\n    const isNewWeekBoolArray = excelData.map(item => { return item.week?.week }).map((v, i, a) => a.indexOf(v) === i);\r\n\r\n    var weeks = [];\r\n    isNewWeekBoolArray.forEach((item, index) => {\r\n        if (item){\r\n            return weeks.push(excelData[index].week);\r\n        }\r\n    });\r\n\r\n    useEffect(() => {\r\n        if (!excelSelectedWeek) {\r\n            dispatch(selectedWeek(weeks[weeks.length - 1]?.week));\r\n        }\r\n    })\r\n\r\n    if (excelDataStatus !== 'succeeded' || !excelSelectedWeek) {\r\n        return null;\r\n    }\r\n    \r\n    const nextWeek = () => {\r\n        const currentPos = weeks.findIndex(item => item.week === excelSelectedWeek);\r\n        const next = (currentPos + 1) >= weeks.length ? weeks[0] : weeks[currentPos + 1];\r\n        dispatch(reset());\r\n        dispatch(selectedWeek(next.week));\r\n    }\r\n    const prevWeek = () => {\r\n        const currentPos = weeks.findIndex(item => item.week === excelSelectedWeek);\r\n        const prev = (currentPos - 1) < 0 ? weeks[weeks.length - 1] : weeks[currentPos - 1];\r\n        dispatch(reset());\r\n        dispatch(selectedWeek(prev.week));\r\n    }\r\n\r\n    const displayWeek = weeks[weeks.findIndex(item => item.week === excelSelectedWeek)];\r\n    const displayWeekString = displayWeek ? displayWeek.weekStartDay + \"   \" + displayWeek.weekEndDay + \"  (\" + displayWeek.week.toString() + \")\" : \"loading...\";\r\n    \r\n    return (\r\n        <div>\r\n            <Button.Group>\r\n                <Button icon onClick={prevWeek}>\r\n                    <Icon name='angle left' />\r\n                </Button>\r\n                <Button>\r\n                    {displayWeekString}\r\n                </Button>\r\n                <Button icon onClick={nextWeek}>\r\n                    <Icon name='angle right' />\r\n                </Button>\r\n            </Button.Group>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default connect()(WeekBox);","import React from 'react'\r\nimport { Button, Modal } from 'semantic-ui-react'\r\n\r\nfunction ConfirmDeleteInKimai(props) {\r\n    if (props.open === undefined) {\r\n        console.log(\"ConfirmDeleteInKimai - props open must be defined\");\r\n    }\r\n    if (props.callbackYes === undefined) {\r\n        console.log(\"ConfirmDeleteInKimai - props callbackYes must be defined\");\r\n    }\r\n    if (props.callbackNo === undefined) {\r\n        console.log(\"ConfirmDeleteInKimai - props callbackNo must be defined\");\r\n    }\r\n\r\n    return (\r\n        <Modal\r\n            open={props.open}\r\n            size=\"tiny\"\r\n        >\r\n            <Modal.Header>Delete Data in Kimai?</Modal.Header>\r\n            <Modal.Content>\r\n                Do you really want to remove timetracking entries in Kimai as listed?\r\n            </Modal.Content>\r\n            <Modal.Actions>\r\n                <Button color='black' onClick={() => props.callbackNo()}>\r\n                    No\r\n                </Button>\r\n                <Button\r\n                    color='red'\r\n                    content=\"Yes, delete\"\r\n                    labelPosition='right'\r\n                    icon='trash'\r\n                    onClick={() => props.callbackYes()}\r\n                />\r\n            </Modal.Actions>\r\n        </Modal>\r\n    )\r\n}\r\n\r\nexport default ConfirmDeleteInKimai","import React, { useState } from 'react';\r\nimport { useSelector } from 'react-redux'\r\nimport { Button, Table, Icon } from 'semantic-ui-react';\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { pushAllTimesheets, deleteTimesheets } from '../features/updateTimesheets/updateTimesheetsSlice';\r\nimport { fetchAllTimesheets } from '../features/kimaiTimesheets/kimaiTimesheetsSlice';\r\nimport ConfirmDeleteInKimai from './ConfirmDeleteInKimai';\r\nimport { checkExcelTimeOverlays, investigateHours } from '../functions/general';\r\nimport {getIdFromKimaiData} from '../features/kimaiDB/kimaiSlice';\r\n\r\nimport '../css/weekDataDisplay.css';\r\n\r\nexport const WeekDataDisplay = ({ dispatch }) => {\r\n    // Get all information from the store (nearly all)\r\n    const excelDataStatus = useSelector((state) => state.excelData.status);\r\n    const excelData = useSelector((state) => state.excelData.data);\r\n    const excelValidationError = useSelector((state) => state.excelData.validationError);\r\n    const excelSelectedWeek = useSelector((state) => state.excelData.selectedWeek);\r\n\r\n    const kimaiData = useSelector((state) => state.kimaiData);\r\n    const config = useSelector((state) => state.config);\r\n    const userId = useSelector((state) => state.kimaiData.userId);\r\n    const kimaiDataStatus = useSelector((state) => state.kimaiData.status);\r\n\r\n    const kimaiTimesheets = useSelector((state) => state.kimaiTimesheets.data);\r\n    const kimaiTimesheetsStatus = useSelector((state) => state.kimaiTimesheets.status);\r\n\r\n    const kimaiSubmittedTimesheets = useSelector((state) => state.updateTimesheets.data);\r\n    const deletedTimesheets = useSelector((state) => state.updateTimesheets.deletedData);\r\n    const deleteIssues = useSelector((state) => state.updateTimesheets.deleteError);\r\n    const kimaiSubmittedStatus = useSelector((state) => state.updateTimesheets.status);\r\n\r\n    // investigate enabled/disabled button\r\n    const onSendDisabled = (kimaiSubmittedStatus === \"idle\" &&\r\n        excelDataStatus === 'succeeded' &&\r\n        kimaiDataStatus === 'succeeded' &&\r\n        kimaiTimesheetsStatus === 'succeeded') ? false : true;\r\n\r\n    const [displayConfirmDeleteInKimai, setDisplayConfirmDeleteInKimai] = useState(false);\r\n\r\n    const printHints = (errors) => {\r\n        return (errors.map(item => {\r\n            return (<li>{item.error + \" - ExcelRow: \" + item.row + \" - ExcelColumn: \" + item.column}</li>)\r\n        }))\r\n    }\r\n\r\n    // When there had been an Excel Error, print information\r\n    if (excelDataStatus === 'succeeded' && (excelData.length === 0 || excelValidationError.length !== 0)){\r\n        return(\r\n            <div>\r\n                <h2>ISSUE WITH EXCEL FILE:</h2><br/>\r\n                <p>Please make sure that first tab in Excel contains the Timesheet data.</p>\r\n                <p>The column titles must be available in the first row.</p>\r\n                <p>Please check also the column title names are as pre-specified - additional columns are supported, order does not matter.</p>\r\n                {printHints(excelValidationError)}\r\n            </div>\r\n        )\r\n    }\r\n\r\n    // If busy, process first and doe not return anything (reading information first)\r\n    if (excelDataStatus !== 'succeeded' || kimaiSubmittedTimesheets.length === 0 || !excelSelectedWeek ||\r\n        kimaiDataStatus !== 'succeeded' ||\r\n        (kimaiTimesheetsStatus !== 'succeeded' &&\r\n            kimaiSubmittedStatus === 'idle')) {\r\n        return null;\r\n    }\r\n\r\n    // Excel: select CALENDERWEEK - get ID numbers for user, project and activity\r\n    var excelDisplayData = [...excelData.filter(item => item.week.week === excelSelectedWeek)];\r\n    excelDisplayData = excelDisplayData.map((item) => {\r\n        var description = [item.tasks, item.details].filter(Boolean).join(\" - \");\r\n        var activityId = null;\r\n        if (item.activity){\r\n            activityId = getIdFromKimaiData(kimaiData,item.customer, item.project, item.activity);\r\n            if (!activityId){\r\n                activityId = getIdFromKimaiData(kimaiData, null, null, item.activity);\r\n            }\r\n        }\r\n\r\n        return ({\r\n            ...item,\r\n            userId: kimaiData.userId,\r\n            projectId: getIdFromKimaiData(kimaiData,item.customer, item.project, null),\r\n            activityId: activityId,\r\n            description: description,\r\n            billable: item.chargeableCorrected !== undefined ? item.chargeableCorrected : item.chargeable,\r\n            timesheetId: null\r\n        }\r\n        );\r\n    });\r\n\r\n    // Kimai: select data of corresponding calenderweek\r\n    const startDay = excelDisplayData[0].week.weekStartDay;\r\n    const endDay = excelDisplayData[0].week.weekEndDay;\r\n    var kimaiDisplayData = kimaiTimesheets.filter(item => item.begin.split('T')[0] >= startDay && item.end.split('T')[0] <= endDay);\r\n\r\n    // loop through DB data and update Sheet link if available, otherwise include into display data\r\n    kimaiDisplayData.forEach(item => {\r\n        const entry = {\r\n            timesheetId: item.id,\r\n            date: item.begin.split('T')[0],\r\n            start: item.begin.substring(11, 16),\r\n            end: item.end.substring(11, 16),\r\n            project: kimaiData.projects[item.project].name,\r\n            projectId: item.project,\r\n            customer: kimaiData.projects[item.project].customer.name,\r\n            customerId: kimaiData.projects[item.project].customer.id,\r\n            activity: kimaiData.activities[item.activity].name,\r\n            activityId: item.activity,\r\n            description: item.description ? item.description : \"\",\r\n            billable: item.billable\r\n        };\r\n\r\n        // check whether entry is available\r\n        var found = false;\r\n        excelDisplayData.forEach(excelItem => {\r\n            if (!excelItem.timesheetId &&\r\n                excelItem.date === entry.date &&\r\n                excelItem.start === entry.start &&\r\n                excelItem.end === entry.end &&\r\n                excelItem.project === entry.project &&\r\n                excelItem.activity === entry.activity &&\r\n                excelItem.description === entry.description &&\r\n                excelItem.billable === entry.billable\r\n            ) {\r\n                excelItem.timesheetId = entry.timesheetId;\r\n                found = true;\r\n            }\r\n        })\r\n        if (!found) {\r\n            excelDisplayData.push(entry);\r\n        }\r\n    })\r\n\r\n    // included previously deleted entries\r\n    if (deletedTimesheets?.length > 0) {\r\n        const deletedIDs = deletedTimesheets.map(item => item.timesheetId);\r\n        excelDisplayData = excelDisplayData.filter(item => !deletedIDs.includes(item.timesheetId)).concat(deletedTimesheets);\r\n    }\r\n\r\n    // supporter function to include error message text\r\n    const includeError = (item, message) => {\r\n        item.action = \"error\";\r\n        if (!item.message) {\r\n            item.message = []\r\n            item.message.push(message);\r\n        }\r\n        else {\r\n            item.message.push(message);\r\n        }\r\n    }\r\n\r\n    // loop through excel data and investigate action\r\n    excelDisplayData.forEach(item => {\r\n        if (!item.action) {\r\n            // set actions and \r\n            if (config.ignoreActivities && config.ignoreActivities.includes(item.activity)) {\r\n                item.action = \"ignore\";\r\n                item.message = [\"Activity '\" + item.activity + \"' is always ignored by configuration.\"];\r\n            }\r\n            else if (item.lineNumber && item.timesheetId) {\r\n                item.action = \"none\";\r\n            }\r\n            else if (item.lineNumber && !item.timesheetId) {\r\n                // available in Excel, but not in Kimai\r\n                item.action = (!kimaiSubmittedTimesheets[item.lineNumber]) ? \"add\" : \"added\";\r\n            }\r\n            else if (!item.lineNumber && item.timesheetId) {\r\n                // available in Kimai, but not in Excel\r\n                item.action = \"delete\";\r\n                item.message = [\"This item is available in Kimai, but not in the ExcelSheet. It will be deleted from Kimai.\"];\r\n            }\r\n\r\n            // perform checks on Excel content, update messages\r\n            if (item.lineNumber && item.action === \"add\") {\r\n                if (!item.activityId) {\r\n                    includeError(item, \"Activitiy not found in Kimai.\");\r\n                }\r\n                if (!item.projectId) {\r\n                    includeError(item, \"Project not found in Kimai.\");\r\n                }\r\n                if (!item.start) {\r\n                    includeError(item, \"Start time must not be missing.\");\r\n                }\r\n                if (!item.end) {\r\n                    includeError(item, \"End time must not be missing.\");\r\n                }\r\n            }\r\n        }\r\n    });\r\n\r\n    // check whether there are time overlay conflicts\r\n    checkExcelTimeOverlays(excelDisplayData);\r\n    // investigate hours\r\n    var hours = investigateHours(excelDisplayData);\r\n\r\n    // display error message text in DIV elements with <BR>s\r\n    const displayMessages = (messages) => {\r\n        return (\r\n            messages.map((item, index) => { return (<div key={\"displayMessage\" + index}>{item}<br /></div>); })\r\n        );\r\n    }\r\n\r\n    // create action display\r\n    const displayAction = (item, submittedTimesheet, deleteIssues) => {\r\n        if (!submittedTimesheet && !deleteIssues) {\r\n            if (item.message) {\r\n                return (\r\n                    <Table.Cell className=\"cellOuterComment\" disabled={false}>\r\n                        {item.action}\r\n                        <Icon name='info' />\r\n                        <span className=\"cellComment\">{displayMessages(item.message)}</span>\r\n                    </Table.Cell>\r\n                );\r\n            }\r\n            else {\r\n                return <Table.Cell>{item.action}</Table.Cell>\r\n            }\r\n        }\r\n        if (submittedTimesheet) {\r\n            if (submittedTimesheet.hasIssue === false) {\r\n                return <Table.Cell positive>added</Table.Cell>\r\n            }\r\n            else {\r\n                return (\r\n                    <Table.Cell negative className=\"cellOuterComment\">\r\n                        Failure (add)\r\n                        <Icon name='info' />\r\n                        <span className=\"cellComment\">{submittedTimesheet.errorMessage}</span>\r\n                    </Table.Cell>\r\n                );\r\n            }\r\n        }\r\n        else {\r\n            return (\r\n                <Table.Cell negative className=\"cellOuterComment\">\r\n                    Failure (del)\r\n                    <Icon name='info' />\r\n                    <span className=\"cellComment\">{deleteIssues.errorMessage}</span>\r\n                </Table.Cell>\r\n            );\r\n        }\r\n\r\n    }\r\n\r\n    // create row display\r\n    const displayData = () => {\r\n        return (\r\n            excelDisplayData.map((item) => {\r\n                if (deleteIssues[item.timesheetId] && item.action === \"delete\") {\r\n                    return null;\r\n                }\r\n\r\n                var rowColorCode = \"\";\r\n                var overlayColorCode = \"\";\r\n\r\n                if (item.action === \"none\" || item.action === \"ignore\") {\r\n                    rowColorCode = \"lightGrey\";\r\n                }\r\n                if (kimaiSubmittedTimesheets[item.lineNumber]) {\r\n                    rowColorCode = kimaiSubmittedTimesheets[item.lineNumber].hasIssue === false ? \"positive\" : \"negative\"\r\n                }\r\n                if (item.action === \"deleted\") {\r\n                    rowColorCode = \"positive\"\r\n                }\r\n\r\n                if (item.overlayIssue) {\r\n                    overlayColorCode = \"orange\";\r\n                }\r\n\r\n                const negativeProject = !kimaiData.projects[item.projectId] && item.action !== \"ignore\" ? true : false;\r\n                const negativeActivity = !kimaiData.activities[item.activityId] && item.action !== \"ignore\" ? true : false;\r\n                const negativeStart = !item.start && item.action !== \"ignore\" ? true : false;\r\n                const negativeEnd = !item.end && item.action !== \"ignore\" ? true : false;\r\n\r\n                return (\r\n                    <Table.Row key={[item.lineNumber, item.timesheetId].join()} className={rowColorCode}>\r\n\r\n                        {displayAction(item, kimaiSubmittedTimesheets[item.lineNumber], deleteIssues[item.timesheetId])}\r\n                        <Table.Cell>{item.lineNumber}</Table.Cell>\r\n                        <Table.Cell>{item.timesheetId}</Table.Cell>\r\n                        <Table.Cell className={overlayColorCode}>{item.date}</Table.Cell>\r\n                        <Table.Cell negative={negativeStart} className={overlayColorCode}>{item.start}</Table.Cell>\r\n                        <Table.Cell negative={negativeEnd} className={overlayColorCode}>{item.end}</Table.Cell>\r\n                        <Table.Cell>{item.customer}</Table.Cell>\r\n                        <Table.Cell negative={negativeProject}>{item.project}</Table.Cell>\r\n                        <Table.Cell negative={negativeActivity}>{item.activity}</Table.Cell>\r\n                        <Table.Cell>{item.description}</Table.Cell>\r\n                        {\r\n                            (item.billable)\r\n                                ? <Table.Cell><Icon name='checkmark' /></Table.Cell>\r\n                                : <Table.Cell><Icon name='close' /></Table.Cell>\r\n                        }\r\n                    </Table.Row>\r\n                );\r\n            })\r\n        );\r\n    }\r\n\r\n    // perform update actions and afterwards trigger re-read from Kimai\r\n    const performSendToKimaiClick = () => {\r\n        setDisplayConfirmDeleteInKimai(false);\r\n\r\n        // add new timeSheets to Kimai\r\n        var submitExcelData = excelDisplayData.filter(item => item.action === \"add\");\r\n        dispatch(pushAllTimesheets({ data: submitExcelData, config: config }));\r\n\r\n        // remove timeSheets in Kimai\r\n        var removeAccordingExcelData = excelDisplayData.filter(item => item.action === \"delete\");\r\n        dispatch(deleteTimesheets({ data: removeAccordingExcelData, config: config }));\r\n\r\n        // update information - fetch from database\r\n        setTimeout(function () {\r\n            dispatch(fetchAllTimesheets({ ...config, userId: userId }))\r\n        }, 5000);\r\n    }\r\n\r\n    const abortSendToKimaiClick = () => {\r\n        setDisplayConfirmDeleteInKimai(false);\r\n    }\r\n\r\n    // display modal to check to really remove items from Kimai\r\n    const onSendToKimaiClick = () => {\r\n        var removeAccordingExcelData = excelDisplayData.filter(item => item.action === \"delete\");\r\n        if (removeAccordingExcelData.length === 0) {\r\n            performSendToKimaiClick();\r\n        }\r\n        else {\r\n            setDisplayConfirmDeleteInKimai(true);\r\n        }\r\n    }\r\n\r\n    const niceTimeDisplay = (times) => {\r\n        const mins = times.mins > 9 ? times.mins : \"0\" + times.mins;\r\n        return times.hours.toString() + \":\" + mins;\r\n    }\r\n\r\n    // return core elements\r\n    return (\r\n        <div>\r\n            <table>\r\n                <tbody>\r\n                    <tr>\r\n                        <td><Button onClick={onSendToKimaiClick} disabled={onSendDisabled}>Send to Kimai</Button></td>\r\n                        <td>Hours: {niceTimeDisplay(hours.sumTimes)}</td>\r\n                        <td>/</td>\r\n                        <td>Billable hours: {niceTimeDisplay(hours.sumTimesBillable)}</td>\r\n                    </tr>                \r\n                </tbody>\r\n            </table>            \r\n            <ConfirmDeleteInKimai\r\n                open={displayConfirmDeleteInKimai}\r\n                callbackYes={performSendToKimaiClick}\r\n                callbackNo={abortSendToKimaiClick}\r\n            />\r\n            <Table celled>\r\n                <Table.Header>\r\n                    <Table.Row>\r\n                        <Table.HeaderCell>Action</Table.HeaderCell>\r\n                        <Table.HeaderCell>Line</Table.HeaderCell>\r\n                        <Table.HeaderCell>ID</Table.HeaderCell>\r\n                        <Table.HeaderCell>Date</Table.HeaderCell>\r\n                        <Table.HeaderCell>Start</Table.HeaderCell>\r\n                        <Table.HeaderCell>End</Table.HeaderCell>\r\n                        <Table.HeaderCell>Customer</Table.HeaderCell>\r\n                        <Table.HeaderCell>Project</Table.HeaderCell>\r\n                        <Table.HeaderCell>Activity</Table.HeaderCell>\r\n                        <Table.HeaderCell>Description</Table.HeaderCell>\r\n                        <Table.HeaderCell>Billable</Table.HeaderCell>\r\n                    </Table.Row>\r\n                </Table.Header>\r\n\r\n                <Table.Body>\r\n                    {displayData()}\r\n\r\n                </Table.Body>\r\n            </Table>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default connect()(WeekDataDisplay);","import React from 'react';\r\nimport { Menu, Icon } from 'semantic-ui-react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\nclass HeaderTop extends React.Component {\r\n    state = {\r\n        smallMenuEnlarge: false,\r\n        width: 0,\r\n        height: 0\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.goToLink = this.goToLink.bind(this)\r\n        this.updateWindowDimensions = this.updateWindowDimensions.bind(this);\r\n        this.handleSmallMenuEnlargeToggle = this.handleSmallMenuEnlargeToggle.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.updateWindowDimensions();\r\n        window.addEventListener('resize', this.updateWindowDimensions);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        window.removeEventListener('resize', this.updateWindowDimensions);\r\n    }\r\n\r\n    updateWindowDimensions() {\r\n        this.setState({ width: window.innerWidth, height: window.innerHeight });\r\n    }\r\n\r\n    goToLink(link) {\r\n        if (link === \"kimaiExternal\"){\r\n            window.open(this.props.kimaiAPIURL.substring(0,this.props.kimaiAPIURL.length - 5), \"_blank\");\r\n        }\r\n        if (this.props.location.pathname !== link){\r\n            this.props.history.push(link);\r\n        }\r\n    }\r\n\r\n    handleItemClick = (e, { name }) => {\r\n        e.preventDefault()\r\n    \r\n        this.setState({ smallMenuEnlarge: false });\r\n        switch (name) {\r\n            case \"Home\": this.goToLink('/'); break;\r\n            case \"Admin\": this.goToLink('/admin'); break;\r\n            case \"Kimai\": this.goToLink('kimaiExternal'); break;\r\n            case \"Info\": this.goToLink('/info'); break;\r\n            default: break;\r\n        }\r\n    }\r\n\r\n    handleSmallMenuEnlargeToggle = () => { this.setState({ smallMenuEnlarge: !this.state.smallMenuEnlarge }) }\r\n\r\n    menu = <Menu.Menu position='left'>\r\n        <Menu.Item name='Home' onClick={this.handleItemClick} />\r\n        {(!this.props.config.adminUser || (this.props.config.adminUser.includes(this.props.config.username))) &&\r\n        <Menu.Item name='Admin' onClick={this.handleItemClick} />}\r\n        <Menu.Item name='Kimai' onClick={this.handleItemClick} icon='external alternate'/> \r\n        <Menu.Item name='Info' onClick={this.handleItemClick}/> \r\n    </Menu.Menu>;\r\n\r\n    renderSmallMenu() {\r\n        const head =\r\n            <div className=\"ui container fluid\" align=\"left\">\r\n                <table align=\"center\">\r\n                    <tbody>\r\n                        <tr>\r\n                            <td valign=\"middle\"><a href=\"https://www.glacon.eu\" rel=\"noopener noreferrer\" target=\"_blank\">\r\n                                <img src='./images/fischlogo_02_black_small.png' alt=\"Logo\" style={{ height: \"60px\" }}/>\r\n                            </a></td>                            \r\n                            <td></td>\r\n                            <td valign=\"middle\"><Icon name='sidebar' size=\"big\" onClick={this.handleSmallMenuEnlargeToggle} /></td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n            </div>;\r\n        if (this.state.smallMenuEnlarge === false) {\r\n            return (<div>{head}</div>);\r\n        }\r\n        return (\r\n            <div className=\"ui centered grid\">\r\n                <div className=\"hideContentOnLargeWidth\">\r\n                    {head}\r\n                    <hr />\r\n                    <div className=\"color_medium_light\" >\r\n                        <div className=\"ui container float\" align=\"left\">\r\n                            <Menu inverted secondary fluid vertical>\r\n                                {this.menu}\r\n                            </Menu>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    renderLargeMenu() {\r\n        return (            \r\n                <Menu inverted secondary className=\"hideContentOnSmallWidth\">\r\n                    <div className=\"ui\"><a href=\"https://www.glacon.eu\" rel=\"noopener noreferrer\" target=\"_blank\">\r\n                        <img src='./images/fischlogo_02_black_small.png' alt=\"Logo\" style={{ height: \"60px\" }} className=\"padding_left_right\"/>\r\n                    </a></div>                    \r\n                    {this.menu}\r\n                </Menu>\r\n        );\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"padding_top_bottom color_medium_light\">\r\n                {this.state.width >= 1000 && this.renderLargeMenu()}\r\n                {this.state.width < 1000 && this.renderSmallMenu()}\r\n            </div >\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        kimaiAPIURL: state.config.kimaiAPI,\r\n        config: state.config\r\n    };\r\n};\r\n\r\nexport default withRouter(connect(\r\n    mapStateToProps,\r\n    null\r\n)(HeaderTop));\r\n","import React from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nimport { ExcelStatusDisplay } from '../excelImport/ExcelStatusDisplay';\r\nimport { KimaiStatusDisplay } from '../kimaiDB/KimaiStatusDisplay';\r\nimport { KimaiStatusTimesheetsDisplay } from '../kimaiTimesheets/KimaiStatusTimesheetsDisplay';\r\nimport ExcelFileReadIn from '../excelImport/ExcelFileReadIn';\r\nimport WeekBox from '../../components/WeekBox';\r\nimport WeekDataDisplay from '../../components/WeekDataDisplay';\r\nimport HeaderTop from '../../components/HeaderTop';\r\n// import CreateDBData from './CreateDBData';\r\n\r\n\r\nimport 'semantic-ui-css/semantic.min.css'\r\nimport '../../css/globals.css';\r\n\r\nclass Main extends React.Component {\r\n\r\n    componentDidMount() {\r\n        //createData();\r\n\r\n        /*\r\n        var url = \"https://kimai.glacon.eu/api/customers\";\r\n\r\n        var xhr = new XMLHttpRequest();\r\n        xhr.open(\"POST\", url, true);\r\n\r\n        xhr.setRequestHeader(\"Content-Type\", \"application/json\");\r\n        //xhr.setRequestHeader('X-AUTH-USER', \"katja\");\r\n        xhr.setRequestHeader('X-AUTH-USER', \"api_admin_user\");\r\n        xhr.setRequestHeader('X-AUTH-TOKEN', \"topSecretAPISomethingUnicorn564\");\r\n\r\n        xhr.onreadystatechange = function () {\r\n            if (xhr.readyState === 4) {\r\n                console.log(xhr.status);\r\n                console.log(xhr.responseText);\r\n            }\r\n        };\r\n\r\n        var data = {\r\n            \"name\": \"ChrestosA\",\r\n            \"country\": \"DE\",\r\n            \"currency\": \"EUR\",\r\n            \"timezone\": \"Europe/Berlin\",\r\n            \"comment\": \"Used for internal tasks\",\r\n            \"visible\": true\r\n        };\r\n\r\n        xhr.send(JSON.stringify(data));\r\n        */\r\n    }\r\n\r\n    render() {\r\n        if (!(this.props.config.username && this.props.config.password) || \r\n            (this.props.kimaiGeneralStatusError && this.props.kimaiGeneralStatusError === \"Invalid credentials\")) {\r\n            return <Redirect to=\"/login\" />;\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                <HeaderTop />\r\n                <div className=\"padding8\">\r\n                    <h1>Excel Sheet to Kimai Import</h1>\r\n                    <table>\r\n                        <tbody>\r\n                            <tr>\r\n                                <td><ExcelFileReadIn /></td>\r\n                                <td><ExcelStatusDisplay /></td>\r\n                                <td><KimaiStatusDisplay /></td>\r\n                                <td><KimaiStatusTimesheetsDisplay /></td>\r\n                            </tr>\r\n                        </tbody>\r\n                    </table>\r\n                    <hr />\r\n                    <WeekBox />\r\n                    <br></br>\r\n                    <WeekDataDisplay />\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        config: state.config,\r\n        kimaiGeneralStatusError: state.kimaiData.error\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps,null)(Main);","import { kimaiClientPostGeneric } from \"../api/kimaiClientPostGeneric\";\r\nimport { getIdFromKimaiData } from \"../features/kimaiDB/kimaiSlice\";\r\n\r\nexport async function createData(kimaiData, contentData, config, callback) {\r\n    var updatedKimaiData = { ...kimaiData };\r\n    var i;\r\n    var response;\r\n    var messagesResponse = [];\r\n\r\n    const addKimaiData = (type, content = null) => {\r\n        var toAdd = {}\r\n        toAdd[content.id] = content;\r\n        updatedKimaiData[type] = { ...updatedKimaiData[type], ...toAdd };\r\n    }\r\n\r\n    const addIfNotInArray = (fullArray, itemObject) => {\r\n        var found = false;\r\n        fullArray.forEach(item => {\r\n            if (JSON.stringify(item) === JSON.stringify(itemObject)) {\r\n                found = true;\r\n                return;\r\n            }\r\n        })\r\n        if (!found) {\r\n            fullArray.push(itemObject)\r\n        }\r\n    }\r\n\r\n    var data = { customers: [], projects: [], activities: [] }\r\n    contentData.filter(item => item.customer && item.customer !== \"\").forEach(customer => {\r\n        var newReturn = {};\r\n        newReturn.name = customer.customer;\r\n        newReturn.country = customer.customer_country;\r\n        newReturn.currency = customer.customer_currency;\r\n        newReturn.timezone = customer.customer_timezone;\r\n        newReturn.comment = customer.customer_comment;\r\n        addIfNotInArray(data.customers, newReturn);\r\n    })\r\n    contentData.filter(item => item.project && item.project !== \"\").forEach(project => {\r\n        var newReturn = {};\r\n        newReturn.name = project.project;\r\n        newReturn.customer = project.customer;\r\n        addIfNotInArray(data.projects, newReturn);\r\n    })\r\n    contentData.filter(item => item.activity && item.activity !== \"\").forEach(activity => {\r\n        var newReturn = {};\r\n        newReturn.name = activity.activity;\r\n        if (activity.project) {\r\n            newReturn.project = activity.project;\r\n        }\r\n        if (activity.customer) {\r\n            newReturn.customer = activity.customer;\r\n        }\r\n        addIfNotInArray(data.activities, newReturn);\r\n    })\r\n\r\n    // add customers\r\n    for (i = 0; i < data.customers.length; i++) {\r\n        var customer = data.customers[i];\r\n        if (getIdFromKimaiData(updatedKimaiData,customer.name, null, null)) {\r\n            console.log(\"Customer is not created as already existing: \", customer.name);\r\n            messagesResponse.push(\"Customer is not created as already existing: \" + customer.name);\r\n        }\r\n        else {\r\n            var thisCustomer = { ...customer, \"visible\": 1 }\r\n            response = await kimaiClientPostGeneric(\"customers\", config, thisCustomer);\r\n            if (response.id) {\r\n                addKimaiData(\"customers\", { id: response.id, name: response.name })\r\n                console.log(\"Customer created: \", customer.name);\r\n                messagesResponse.push(\"Customer created: \" + customer.name);\r\n            }\r\n            else {\r\n                var allErrors = [];\r\n                for (var item in response.errors.children) {\r\n                    if (response.errors.children[item].errors) {\r\n                        allErrors.push(item + \": \" + response.errors.children[item].errors.join());\r\n                    }\r\n                }\r\n                console.log(\"ISSUES: \", customer.name, response);\r\n                messagesResponse.push(\"ISSUES: \" + customer.name + \" - \" + response.message + \" - \" + allErrors.join(\" - \"));\r\n            }\r\n        }\r\n    }\r\n\r\n    // add projects\r\n    for (i = 0; i < data.projects.length; i++) {\r\n        var project = data.projects[i];\r\n        \r\n        if (getIdFromKimaiData(updatedKimaiData,project.customer, project.name, null)) {\r\n            console.log(\"Project is not created as already existing: \", project.name);\r\n            messagesResponse.push(\"Project is not created as already existing: \" + project.name);\r\n        }\r\n        else if (!getIdFromKimaiData(updatedKimaiData,project.customer, null, null)) {\r\n            console.log(\"ISSUE!!! Customer does not exist for project: \", project.name, project.customer);\r\n            messagesResponse.push(\"ISSUE!!! Customer does not exist for project: \" + project.name + \" - \" + project.customer);\r\n        }\r\n        else {\r\n            var thisProject = { ...project, \"customer\": getIdFromKimaiData(updatedKimaiData,project.customer, null, null), \"visible\": 1 }\r\n            response = await kimaiClientPostGeneric(\"projects\", config, thisProject);\r\n            if (response.id) {\r\n                addKimaiData(\"projects\", { id: response.id, name: response.name, customer: updatedKimaiData.customers[response.customer] })\r\n                console.log(\"Project created: \", project.name);\r\n                messagesResponse.push(\"Project created: \" + project.name);\r\n            }\r\n            else {\r\n                console.log(\"ISSUES: \", project.name, response);\r\n                messagesResponse.push(\"ISSUES: \" + project.name + \" - \" + response.message);\r\n            }\r\n        }\r\n    }\r\n\r\n    // add activities\r\n    for (i = 0; i < data.activities.length; i++) {\r\n        var activity = data.activities[i];\r\n        if (getIdFromKimaiData(updatedKimaiData,activity.customer, activity.project, activity.name)) {\r\n            console.log(\"Activity is not created as already existing: \", activity.name);\r\n            messagesResponse.push(\"Activity is not created as already existing: \" + activity.name);\r\n        }\r\n        else if (activity.project && !getIdFromKimaiData(updatedKimaiData,activity.customer, activity.project, null)) {\r\n            console.log(\"ISSUE!!! Project does not exist for activity: \", activity.name, activity.project);\r\n            messagesResponse.push(\"ISSUE!!! Project does not exist for activity: \" + activity.name + \" - \" + activity.project);\r\n        }\r\n        else {\r\n            var thisActivity;\r\n            if (activity.project) {\r\n                thisActivity = { name: activity.name, \"project\": getIdFromKimaiData(updatedKimaiData,activity.customer, activity.project, null), \"visible\": 1 };\r\n            }\r\n            else {\r\n                thisActivity = { ...activity, \"visible\": 1 };\r\n            }\r\n            response = await kimaiClientPostGeneric(\"activities\", config, thisActivity);\r\n            if (response.id) {\r\n                addKimaiData(\"activities\",\r\n                    {\r\n                        id: response.id,\r\n                        name: response.name,\r\n                        project: updatedKimaiData.projects[response.project] ? updatedKimaiData.projects[response.project] : null\r\n                    })\r\n                console.log(\"Activity created: \", activity.name);\r\n                messagesResponse.push(\"Activity created: \" + activity.name);\r\n            }\r\n            else {\r\n                console.log(\"ISSUES: \", activity.name, response);\r\n                messagesResponse.push(\"ISSUES: \" + activity.name + \" - \" + response.message);\r\n            }\r\n        }\r\n    }\r\n\r\n    if (callback) {\r\n        callback(messagesResponse);\r\n    }\r\n}","const initialState = []\r\n\r\n/* action */\r\nexport function messagesAppend(message) {\r\n    return { type: \"messages/append\", payload: message };\r\n};\r\n\r\nexport function messagesSet(message) {\r\n    return { type: \"messages/set\", payload: message };\r\n};\r\n\r\nexport function messagesReset() {\r\n    return { type: \"messages/reset\", payload: null };\r\n};\r\n\r\n/* reducer */\r\nexport function messagesReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case 'messages/set': {\r\n            return action.payload\r\n        }\r\n        case 'messages/append': {\r\n            return [...initialState, action.payload]\r\n        }\r\n        case 'messages/reset': {\r\n            return []\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n} ","import React from 'react';\r\nimport { connect, useSelector, useDispatch } from \"react-redux\";\r\nimport { Button } from \"semantic-ui-react\";\r\nimport { createData } from '../functions/createData';\r\nimport { messagesSet } from '../features/messages/messagesSlice';\r\nimport readFile from '../api/readFile'\r\nimport readXlsxFile from 'read-excel-file'\r\n\r\nexport const CreateDBDataExcel = () => {\r\n    const fileInputRef = React.createRef();\r\n    const dispatch = useDispatch()\r\n\r\n    const kimaiData = useSelector((state) => state.kimaiData)\r\n    const config = useSelector((state) => state.config)\r\n\r\n    const columns = [\"customer\", \"project\", \"activity\", \"customer_country\", \"customer_currency\", \"customer_timezone\", \"customer_comment\"]\r\n    var excelSchema = {};\r\n    columns.forEach(item => {\r\n        excelSchema[item] = {};\r\n        excelSchema[item].prop = item;\r\n        excelSchema[item].type = (value) => {return value.replaceAll(\"\\u00A0\", \" \")};\r\n    });\r\n    \r\n    const finishedFunction = (returnMessages) => {\r\n        dispatch(messagesSet(returnMessages));\r\n    }\r\n\r\n    const createDBData = (contentData) => {\r\n        createData(kimaiData, contentData, config, finishedFunction);\r\n    }\r\n\r\n    const onImportExcel = async (file) => {\r\n        const { files } = file.target;\r\n        let contentBuffer = await readFile(files[0]);\r\n        const result = await readXlsxFile(contentBuffer, { schema:excelSchema } );\r\n        createDBData(result.rows);\r\n    }\r\n\r\n    var disabled = false;\r\n    if (kimaiData.status !== \"succeeded\") {\r\n        disabled = true;\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Button\r\n                disabled={disabled}\r\n                content=\"Create DB Data\"\r\n                labelPosition=\"left\"\r\n                icon=\"hdd\"\r\n                onClick={() => fileInputRef.current.click()}\r\n            />\r\n            <input\r\n                ref={fileInputRef}\r\n                type=\"file\"\r\n                hidden\r\n                onChange={onImportExcel}\r\n            />\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nexport default connect()(CreateDBDataExcel);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nimport CreateDBDataExcel from '../../components/CreateDBDataExcel';\r\nimport { KimaiStatusDisplay } from '../kimaiDB/KimaiStatusDisplay';\r\nimport HeaderTop from '../../components/HeaderTop';\r\n\r\nimport 'semantic-ui-css/semantic.min.css'\r\nimport '../../css/globals.css';\r\n\r\nclass Admin extends React.Component {\r\n\r\n    displayMessages() {\r\n        return (\r\n            this.props.messages.map((message, index) => {\r\n                return (\r\n                    <li key={index}>\r\n                        {message}\r\n                    </li>\r\n                )\r\n            })\r\n        );\r\n    }\r\n\r\n    render() {\r\n        if (!(this.props.config.username && this.props.config.password) ||\r\n            (this.props.kimaiGeneralStatusError && this.props.kimaiGeneralStatusError === \"Invalid credentials\")) {\r\n            return <Redirect to={{\r\n                pathname: '/login',\r\n                state: { from: '/admin' }\r\n            }} />;\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                <HeaderTop />\r\n                <div className=\"padding8\">\r\n                    <h1>Administration</h1>\r\n                    <table>\r\n                        <tbody>\r\n                            <tr>\r\n                                <td><KimaiStatusDisplay /></td>\r\n                                <td><CreateDBDataExcel /></td>\r\n                            </tr>\r\n                        </tbody>\r\n                    </table>\r\n                    <hr />\r\n                    {this.displayMessages()}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = state => {\r\n\r\n    return {\r\n        messages: state.messages,\r\n        config: state.config,\r\n        kimaiGeneralStatusError: state.kimaiData.error\r\n    };\r\n};\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    null\r\n)(Admin);\r\n\r\n//export default Admin;","import React from 'react';\r\nimport HeaderTop from '../../components/HeaderTop';\r\nimport { Grid, Segment, Icon } from 'semantic-ui-react';\r\n\r\nimport 'semantic-ui-css/semantic.min.css'\r\nimport '../../css/globals.css';\r\n\r\nclass Info extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <HeaderTop />\r\n                <Segment vertical>\r\n                    <Grid container stackable verticalAlign='top' centered>\r\n                        <Grid.Row>\r\n\r\n                            <div className=\"padding8 left\">\r\n                                <h1>Information</h1>\r\n                                <h2>TimeKex - Timetracking, Kimai meets Excel</h2>\r\n                                <p>This WebApplication is designed to allow the tracking of working hours in Excel which can then be uploaded to the Kimai Timetracking application.</p>\r\n                                <p><a href=\"https://www.kimai.org/\" target=\"_blank\" rel=\"noreferrer\">Kimai <Icon name=\"external alternate\"/></a> \r\n                                is an open-source free time-tracking application which comes with a lot of functionality and capabilities. There might be\r\n                                situations where the times should be tracked in Excel and finally be uploaded to Kimai. TimeKex is designed to support this process.\r\n                                </p>\r\n                                <b>Prerequisites:</b>\r\n                                <p>To be able to run TimeKex, a running instance of Kimai is required together with a user and an API key of this user. \r\n                                    The API password can be set in Kimai via \"profile\", \"API\" and then \"API Password\".<br/>\r\n                                    There is a stable demonstration version available for Kimai which\r\n                                    can be used for demonstration purposes (<a href=\"https://demo-stable.kimai.org/de/login\" target=\"_blank\" rel=\"noreferrer\">linked here</a>).\r\n                                    To checkout demo users and specifically the API password of a demo user, check the <a href=\"https://www.kimai.org/demo/\" \r\n                                    target=\"_blank\" rel=\"noreferrer\">demo information page</a>.\r\n                                </p>\r\n                            </div>\r\n                        </Grid.Row>\r\n                    </Grid>\r\n                </Segment>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Info;","import React from 'react'\r\nimport { Button, Modal } from 'semantic-ui-react'\r\n\r\nfunction ModalIssueNotify(props) {\r\n    if (props.open === undefined) {\r\n        console.log(\"ModalIssueNotify - props open must be defined\");\r\n        return \"Issue with ModalIssueNotify\";\r\n    }\r\n    if (props.text === undefined) {\r\n        console.log(\"ModalIssueNotify - props issueText must be defined\");\r\n        return \"Issue with ModalIssueNotify\";\r\n    }\r\n\r\n    const onClickEvent = () => {\r\n        if (props.callback){\r\n            props.callback();\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Modal\r\n            open={props.open}\r\n            size=\"tiny\"\r\n        >\r\n            <Modal.Header>Issue</Modal.Header>\r\n            <Modal.Content>\r\n                {props.text}\r\n            </Modal.Content>\r\n            <Modal.Actions>\r\n                <Button color='black' onClick={onClickEvent}>\r\n                    Ok\r\n                </Button>\r\n            </Modal.Actions>\r\n        </Modal>\r\n    )\r\n}\r\n\r\nexport default ModalIssueNotify","const initialState = {}\r\n\r\n/* action */\r\nexport function globalConfigSet(config) {\r\n    return { type: \"config/globalConfigChanged\", payload: config };\r\n};\r\n\r\n/* reducer */\r\nexport function globalConfigReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case 'config/globalConfigChanged': {\r\n            return action.payload \r\n        }\r\n        default:\r\n            return state\r\n    }\r\n} ","import React from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport { withRouter } from 'react-router-dom';\r\nimport { Grid, Segment, Icon, Input, Button } from 'semantic-ui-react';\r\n\r\nimport ModalIssueNotify from '../../components/ModalIssueNotify'\r\nimport { globalConfigSet } from  '../../features/globalConfig/globalConfigSlice';\r\nimport { reset } from '../../features/kimaiDB/kimaiSlice';\r\n\r\n\r\n\r\nimport 'semantic-ui-css/semantic.min.css'\r\nimport '../../css/globals.css';\r\n\r\n\r\nclass Login extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { user: \"\", password: \"\", isLoading: false };\r\n\r\n        this.handleUserChange = this.handleUserChange.bind(this);\r\n        this.handlePWChange = this.handlePWChange.bind(this);\r\n        this.handleLoginSubmit = this.handleLoginSubmit.bind(this);\r\n        this.resetKimaiDataRead = this.resetKimaiDataRead.bind(this);\r\n\r\n        this.keyPress = this.keyPress.bind(this);\r\n    }\r\n\r\n    handleUserChange(event) {\r\n        this.setState({ user: event.target.value });\r\n    }\r\n\r\n    handlePWChange(event) {\r\n        this.setState({ password: event.target.value });\r\n    }\r\n\r\n    handleLoginSubmit() {\r\n        this.props.dispatch(globalConfigSet({...this.props.config, username: this.state.user.trim(), password: this.state.password.trim()}));\r\n        if (this.props.location?.state?.from){\r\n            this.props.history.push(this.props.location.state.from);    \r\n        }\r\n        else {\r\n            this.props.history.push(\"/\");\r\n        }\r\n    }\r\n\r\n    keyPress(e) {\r\n        if (e.keyCode === 13) {\r\n            this.handleLoginSubmit();\r\n        }\r\n    }\r\n\r\n    resetKimaiDataRead(){\r\n        this.props.dispatch(reset());\r\n    }\r\n\r\n    render() {\r\n        const invalidCredentialIssues = this.props.kimaiGeneralStatusError === \"Invalid credentials\" ? true : false;\r\n\r\n        return (\r\n            <div className=\"nearCenterScreen\">\r\n                <ModalIssueNotify open={invalidCredentialIssues} text=\"Invalid credentials\" callback={this.resetKimaiDataRead}/>\r\n                <Segment vertical>\r\n                    <Grid container stackable verticalAlign='top' centered>\r\n                        <Grid.Row>\r\n                            <h1>Login for TimeKEx</h1>\r\n                        </Grid.Row>\r\n                        <Grid.Row>\r\n                            <table width=\"50%\" align=\"center\" >\r\n                                <tbody>\r\n                                    <tr>\r\n                                        <td>\r\n                                            <Input\r\n                                                id=\"user\"\r\n                                                placeholder=\"Username\"\r\n                                                fluid\r\n                                                value={this.state.user}\r\n                                                onChange={this.handleUserChange}\r\n                                            />\r\n                                        </td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>\r\n                                            <Input\r\n                                                id=\"password\"\r\n                                                placeholder=\"API Password\"\r\n                                                type=\"password\"\r\n                                                fluid\r\n                                                value={this.state.password}\r\n                                                onChange={this.handlePWChange}\r\n                                                onKeyDown={this.keyPress}\r\n                                            />\r\n                                        </td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>\r\n                                            <Button fluid onClick={this.handleLoginSubmit}>\r\n                                                <Icon name=\"sign-in\" /> Login\r\n                                            </Button>\r\n                                        </td>\r\n                                    </tr>\r\n                                </tbody>\r\n                            </table>\r\n                        </Grid.Row>\r\n                    </Grid>\r\n                </Segment>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        config: state.config,\r\n        kimaiGeneralStatusError: state.kimaiData.error\r\n    };\r\n};\r\n\r\nexport default withRouter(connect(\r\n    mapStateToProps,\r\n    null\r\n)(Login));","import React from 'react'\r\nimport {\r\n    HashRouter as Router,\r\n    Switch,\r\n    Route,\r\n    Redirect,\r\n} from 'react-router-dom'\r\nimport { connect } from \"react-redux\";\r\n\r\nimport Main from './features/views/Main';\r\nimport Admin from './features/views/Admin';\r\nimport Info from './features/views/Info';\r\nimport Login from './features/views/Login';\r\nimport { globalConfigSet } from './features/globalConfig/globalConfigSlice';\r\n\r\nclass App extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.props.dispatch(globalConfigSet(this.props._config));\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Router>\r\n                <div className=\"App\">                                        \r\n                    <Switch>\r\n                        <Route exact path=\"/\" component={Main} />\r\n                        <Route exact path=\"/admin\" component={Admin} />\r\n                        <Route exact path=\"/info\" component={Info} />\r\n                        <Route exact path=\"/login\" component={Login} />\r\n                        <Redirect to=\"/\" />\r\n                    </Switch>\r\n                </div>\r\n            </Router>\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect()(App);\r\n","import { configureStore } from '@reduxjs/toolkit';\r\nimport excelDataReducer from '../features/excelImport/excelSlice';\r\nimport kimaiDataReducer from '../features/kimaiDB/kimaiSlice';\r\nimport kimaiTimesheetsReducer from '../features/kimaiTimesheets/kimaiTimesheetsSlice';\r\nimport updateTimesheetsReducer from '../features/updateTimesheets/updateTimesheetsSlice';\r\nimport { globalConfigReducer } from '../features/globalConfig/globalConfigSlice';\r\nimport {messagesReducer} from '../features/messages/messagesSlice';\r\n\r\nexport default configureStore({\r\n    reducer: {\r\n        excelData: excelDataReducer,\r\n        kimaiData: kimaiDataReducer,\r\n        config: globalConfigReducer,\r\n        updateTimesheets: updateTimesheetsReducer,\r\n        kimaiTimesheets : kimaiTimesheetsReducer,\r\n        messages: messagesReducer\r\n    },\r\n})","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './App'\r\nimport store from './app/store'\r\nimport { Provider } from 'react-redux'\r\n\r\nwindow.RenderApp = (config) => {\r\n    ReactDOM.render(\r\n        <Provider store={store}>\r\n            <App _config={config} />\r\n        </Provider>,\r\n        document.getElementById('root')\r\n    )\r\n}\r\n\r\n/*\r\nwindow.RenderApp = (config) => {\r\n    ReactDOM.render(\r\n        <React.StrictMode>\r\n            <Provider store={store}>\r\n                <App _config={config} />\r\n            </Provider>\r\n        </React.StrictMode>,\r\n        document.getElementById('root')\r\n    )\r\n}\r\n*/"],"sourceRoot":""}